{"version":3,"sources":["components/Section.js","components/ContactListItem.js","components/ContactList.js","components/ContactEditor.js","components/Filter.js","components/App.js","index.js"],"names":["Section","title","children","defaultProps","ContactListItem","name","number","onRemove","type","className","onClick","ContactList","contacts","onRemovecontact","map","id","key","ContactEditor","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","htmlFor","onChange","Component","Filter","OnChangeFilter","PropTypes","string","App","filter","checkSame","find","contact","addContact","uuidv4","alert","prevState","removeContact","contactId","changeFilter","getFilterName","toLowerCase","includes","filterContacts","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6101eaf6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n  <li>\r\n    <span>\r\n      {name}: {number}\r\n    </span>\r\n    <button type=\"button\" className=\"deleteBtn\" onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onRemovecontact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        onRemove={() => onRemovecontact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onRemovecontact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactList from './ContactList';\r\n\r\nexport default class ContactEditor extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\">\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"number\">\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nContactList.PropTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ value, OnChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <span>Find name</span>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => OnChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  OnChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Section from './Section';\r\nimport ContactList from './ContactList';\r\nimport ContactEditor from './ContactEditor';\r\nimport Filter from './Filter';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  checkSame = name => {\r\n    return this.state.contacts.find(contact => contact.name === name);\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.checkSame(name)\r\n      ? alert('same name!!!')\r\n      : this.setState(prevState => {\r\n          return { contacts: [...prevState.contacts, contact] };\r\n        });\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n  getFilterName = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filterContacts = this.getFilterName();\r\n    return (\r\n      <Section>\r\n        <ContactEditor onAddContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {filterContacts.length > 0 && (\r\n          <Filter value={filter} OnChangeFilter={this.changeFilter} />\r\n        )}\r\n        {filterContacts.length > 0 && (\r\n          <ContactList\r\n            contacts={filterContacts}\r\n            onRemovecontact={this.removeContact}\r\n          />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}